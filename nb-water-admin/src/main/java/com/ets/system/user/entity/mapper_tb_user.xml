<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ets.system.user.dao.UserDao">

<sql id="where">
 	<where>
            <!--
            <if test="username != null and username != '' "> and username like CONCAT('%',#{username},'%')</if>
        	<if test="email != null and email != '' "> and email like CONCAT('%',#{email},'%')</if>
        	<if test="tel != null and tel != '' "> and tel like CONCAT('%',#{tel},'%')</if>
        	<if test="ctime != null and ctime != '' "> and ctime like CONCAT('%',#{ctime},'%')</if>
        	<if test="isclose != null and isclose != '' "> and isclose = #{isclose}</if>
        	-->
        	<if test="username != null and username != '' "> and username like '%${username}%'</if>
        	<if test="email != null and email != '' "> and email like  '%${email}%'</if>
        	<if test="tel != null and tel != '' "> and tel like  '%${tel}%'</if>
        	<if test="ctime != null and ctime != '' "> and ctime like to_date('${ctime}','yyyy-MM-dd HH24:mi:ss')</if>
        	<if test="isclose != null and isclose != '' "> and isclose = #{isclose}</if>
     </where>
</sql>
    <sql id="whereCheck">
        <where>
            <if test="username != null and username != '' "> and username = #{username}</if>
            <if test="email != null and email != '' "> and email = #{email}</if>
            <if test="tel !=null and tel != ''"> and tel = #{tel}</if>
        </where>
    </sql>

	<!-- 獲取全部用戶 -->
	<select id="getUsers" parameterType="map" resultType="com.ets.system.user.entity.tb_user">
		
			select * from 
				(
					select * from 
					(
						select u.*,rownum rn from 
						(
							select * from tb_user u 
							 <include refid="where"></include> 
							order by u.ctime desc
						) u 
						where rownum <![CDATA[<=]]> #{page} 
					) 
					where rn > #{limit}
				)
		
    </select>
    
    <!-- 新增用戶 -->
     <insert id="addUser" parameterType="com.ets.system.user.entity.tb_user">
        insert into tb_user values(#{id},#{username},#{password},#{isclose},#{ctime},#{email},#{tel},#{loginnum})
     </insert>
    <!-- 刪除用戶 -->
    <delete id="deleteUser" parameterType="java.lang.String">
        delete from tb_user where id in
        <foreach item="empnoItem" collection="array" open="(" separator="," close=")">
            #{empnoItem}
        </foreach>
    </delete>
    <!-- 更新用戶 -->
    <update id="updateUser" parameterType="com.ets.system.user.entity.tb_user">
        update tb_user set isclose=#{isclose},email=#{email},tel=#{tel} where id=#{id}
    </update>
    
    <!-- 查看用戶 -->
    <select id="infoUser" resultType="com.ets.system.user.entity.tb_user" parameterType="java.lang.String">
        select * from tb_user where id=#{id}
    </select>
    
    <!-- 获取总记录数 -->
    <select id="getCount" parameterType="map" resultType="long">
    	select count(*) from tb_user
        <include refid="where"></include>
    </select>
    
    <!-- 批量关闭用戶 -->
    <update id="closeUser" parameterType="java.lang.String">
         update tb_user set isclose=0 where id in
        <foreach item="empnoItem" collection="array" open="(" separator="," close=")">
            #{empnoItem}
        </foreach>
    </update>
    
    <!-- 批量启用用戶 -->
    <update id="openUser" parameterType="java.lang.String">
         update tb_user set isclose=1 where id in
        <foreach item="empnoItem" collection="array" open="(" separator="," close=")">
            #{empnoItem}
        </foreach>
    </update>
    
    <select id="checkUser" parameterType="map" resultType="com.ets.system.user.entity.tb_user">
    	select * from tb_user where username=#{username} and password=#{password}
    </select>
    <!--验证唯一性-->
    <select id="isCheckUser" resultType="java.lang.Integer" parameterType="java.lang.String">
        select count(*) from TB_USER where username=#{username}
    </select>
    <!--根据用户名查用户-->
    <select id="getUserByUserName" resultType="com.ets.system.user.entity.tb_user" parameterType="java.lang.String">
        select * from TB_USER where USERNAME=#{username}
    </select>
    <!--根据id去更新密码-->
    <update id="updatePassword" parameterType="java.util.Map">
       update tb_user set password=#{newpwd},loginnum=#{loginnum} where id=#{id}
    </update>
    <!--根据ID和密码查找用户信息-->
    <select id="pwdCheck" resultType="com.ets.system.user.entity.tb_user" parameterType="java.lang.String">
        select * from TB_USER where id=#{id}
    </select>
    <!--对应的是index头部信息的用户编辑-->
    <update id="editUser" parameterType="com.ets.system.user.entity.tb_user">
        update tb_user set email=#{email},tel=#{tel} where id=#{id}
    </update>
    <!--重置密码 -->
    <update id="restPassword" parameterType="java.util.Map">
        update TB_USER set PASSWORD=#{password} where ID in
        <foreach item="id" collection="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>
    

</mapper>
    